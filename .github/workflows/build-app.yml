name: JFrog Security Demo App Builder

on:
  push:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: latest
          JF_URL: https://${{ secrets.JF_URL }}/
          #JFROG_XRAY_URL: ${{ secrets.JF_URL }}/xray
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

      #- name: Docker login to Artifactory
       # run: |
        #  echo ${{ secrets.JF_PASSWORD }} | docker login ${{ secrets.JF_URL }} -u ${{ secrets.JF_USER }} --password-stdin

      - name: Authenticate Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.JF_URL }}
          username: ${{ secrets.JF_USER }}
          password: ${{ secrets.JF_PASSWORD }}

      - name: Pull base image from Artifactory
        run: |
          jf docker pull productdemo.jfrog.io/gartner-docker/jfrog/demo-security:latest

      - name: Build Docker image
        run: |
          jf docker build -t productdemo.jfrog.io/gartner-docker/jfrog/npm-demo:latest .

      - name: Run JFrog Docker scan
        run: |
          docker images
          jf docker scan productdemo.jfrog.io/gartner-docker/jfrog/npm-demo:latest

      - name: Push Docker image to Artifactory
        run: |
          jf docker push productdemo.jfrog.io/gartner-docker/jfrog/npm-demo:latest

      - name: Collect build info
        run: |
          jf rt build-collect-env
          jf rt build-add-git

      - name: Publish build info
        run: |
          jf rt build-publish npm-demo-build 1

      - name: Trigger Xray build scan
        run: |
          jf rt build-scan npm-demo-build 1
